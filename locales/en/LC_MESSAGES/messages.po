# English translations for PROJECT.
# Copyright (C) 2025 ORGANIZATION
# This file is distributed under the same license as the PROJECT project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
msgid ""
msgstr ""
"Project-Id-Version: PROJECT VERSION\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2025-09-29 16:51+0200\n"
"PO-Revision-Date: 2025-09-29 17:14+0200\n"
"Last-Translator: \n"
"Language-Team: en <LL@li.org>\n"
"Language: en\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Generated-By: Babel 2.17.0\n"
"X-Generator: Poedit 3.7\n"

#: app./data/secret_words_controller.py:9
msgid "data.secret_words"
msgstr ""
"{\"airport\": \"Airport\", \"anvil\": \"Anvil\", \"apple\": \"Apple\", \"arena\": \"Arena\", \"armor\": \"Armor\", \"bag\": \"Bag\", \"ball\": \"Ball\", \"banana\": \"Banana\", \"banner\": "
"\"Banner\", \"bard\": \"Bard\", \"bazaar\": \"Bazaar\", \"beach\": \"Beach\", \"bear\": \"Bear\", \"bed\": \"Bed\", \"bird\": \"Bird\", \"black\": \"Black\", \"blue\": \"Blue\", \"book\": "
"\"Book\", \"bottle\": \"Bottle\", \"box\": \"Box\", \"bread\": \"Bread\", \"bridge\": \"Bridge\", \"brown\": \"Brown\", \"bus\": \"Bus\", \"butter\": \"Butter\", \"cake\": \"Cake\", \"camel\": "
"\"Camel\", \"candle\": \"Candle\", \"canyon\": \"Canyon\", \"car\": \"Car\", \"card\": \"Card\", \"castle\": \"Castle\", \"cat\": \"Cat\", \"cave\": \"Cave\", \"chair\": \"Chair\", \"charm\": "
"\"Charm\", \"cheese\": \"Cheese\", \"cheetah\": \"Cheetah\", \"chest\": \"Chest\", \"chicken\": \"Chicken\", \"church\": \"Church\", \"city\": \"City\", \"cliff\": \"Cliff\", \"clock\": "
"\"Clock\", \"cloud\": \"Cloud\", \"cobra\": \"Cobra\", \"coffee\": \"Coffee\", \"coin\": \"Coin\", \"compass\": \"Compass\", \"coral\": \"Coral\", \"cow\": \"Cow\", \"creek\": \"Creek\", "
"\"crown\": \"Crown\", \"crystal\": \"Crystal\", \"curse\": \"Curse\", \"desert\": \"Desert\", \"diamond\": \"Diamond\", \"dock\": \"Dock\", \"dog\": \"Dog\", \"dolphin\": \"Dolphin\", "
"\"door\": \"Door\", \"dragon\": \"Dragon\", \"duck\": \"Duck\", \"dune\": \"Dune\", \"dungeon\": \"Dungeon\", \"dwarf\": \"Dwarf\", \"eagle\": \"Eagle\", \"eel\": \"Eel\", \"egg\": \"Egg\", "
"\"elephant\": \"Elephant\", \"elf\": \"Elf\", \"elixir\": \"Elixir\", \"emerald\": \"Emerald\", \"falcon\": \"Falcon\", \"farm\": \"Farm\", \"fish\": \"Fish\", \"flower\": \"Flower\", "
"\"forest\": \"Forest\", \"fork\": \"Fork\", \"fortress\": \"Fortress\", \"fox\": \"Fox\", \"game\": \"Game\", \"garden\": \"Garden\", \"geyser\": \"Geyser\", \"giraffe\": \"Giraffe\", "
"\"glacier\": \"Glacier\", \"glass\": \"Glass\", \"goat\": \"Goat\", \"goblin\": \"Goblin\", \"gold\": \"Gold\", \"grass\": \"Grass\", \"green\": \"Green\", \"hall\": \"Hall\", \"hammer\": "
"\"Hammer\", \"harbor\": \"Harbor\", \"hat\": \"Hat\", \"hawk\": \"Hawk\", \"helmet\": \"Helmet\", \"hippo\": \"Hippo\", \"horse\": \"Horse\", \"hotel\": \"Hotel\", \"house\": \"House\", "
"\"inn\": \"Inn\", \"island\": \"Island\", \"jester\": \"Jester\", \"jewel\": \"Jewel\", \"juice\": \"Juice\", \"jungle\": \"Jungle\", \"kangaroo\": \"Kangaroo\", \"key\": \"Key\", \"king\": "
"\"King\", \"knife\": \"Knife\", \"knight\": \"Knight\", \"ladder\": \"Ladder\", \"lagoon\": \"Lagoon\", \"lake\": \"Lake\", \"lamp\": \"Lamp\", \"lantern\": \"Lantern\", \"leaf\": \"Leaf\", "
"\"leopard\": \"Leopard\", \"library\": \"Library\", \"lion\": \"Lion\", \"lock\": \"Lock\", \"map\": \"Map\", \"market\": \"Market\", \"marsh\": \"Marsh\", \"meadow\": \"Meadow\", \"meat\": "
"\"Meat\", \"milk\": \"Milk\", \"mirror\": \"Mirror\", \"money\": \"Money\", \"monk\": \"Monk\", \"moon\": \"Moon\", \"mountain\": \"Mountain\", \"music\": \"Music\", \"oasis\": \"Oasis\", "
"\"ocean\": \"Ocean\", \"octopus\": \"Octopus\", \"orange\": \"Orange\", \"owl\": \"Owl\", \"palace\": \"Palace\", \"panda\": \"Panda\", \"panther\": \"Panther\", \"pants\": \"Pants\", "
"\"paper\": \"Paper\", \"park\": \"Park\", \"parrot\": \"Parrot\", \"pasta\": \"Pasta\", \"peacock\": \"Peacock\", \"pearl\": \"Pearl\", \"pen\": \"Pen\", \"pencil\": \"Pencil\", \"phone\": "
"\"Phone\", \"pig\": \"Pig\", \"pink\": \"Pink\", \"pizza\": \"Pizza\", \"plane\": \"Plane\", \"plate\": \"Plate\", \"pond\": \"Pond\", \"port\": \"Port\", \"potion\": \"Potion\", \"prairie\": "
"\"Prairie\", \"priest\": \"Priest\", \"prince\": \"Prince\", \"princess\": \"Princess\", \"purple\": \"Purple\", \"queen\": \"Queen\", \"quill\": \"Quill\", \"rabbit\": \"Rabbit\", \"rain\": "
"\"Rain\", \"red\": \"Red\", \"reef\": \"Reef\", \"rhino\": \"Rhino\", \"rice\": \"Rice\", \"ring\": \"Ring\", \"river\": \"River\", \"road\": \"Road\", \"rope\": \"Rope\", \"ruby\": \"Ruby\", "
"\"rune\": \"Rune\", \"saint\": \"Saint\", \"salt\": \"Salt\", \"sand\": \"Sand\", \"sapphire\": \"Sapphire\", \"school\": \"School\", \"scroll\": \"Scroll\", \"sea\": \"Sea\", \"servant\": "
"\"Servant\", \"shark\": \"Shark\", \"sheep\": \"Sheep\", \"shield\": \"Shield\", \"shirt\": \"Shirt\", \"shoe\": \"Shoe\", \"shop\": \"Shop\", \"shrine\": \"Shrine\", \"signal\": \"Signal\", "
"\"silver\": \"Silver\", \"sky\": \"Sky\", \"snow\": \"Snow\", \"song\": \"Song\", \"soup\": \"Soup\", \"spell\": \"Spell\", \"spoon\": \"Spoon\", \"star\": \"Star\", \"stone\": \"Stone\", "
"\"street\": \"Street\", \"sugar\": \"Sugar\", \"sun\": \"Sun\", \"swamp\": \"Swamp\", \"sword\": \"Sword\", \"symbol\": \"Symbol\", \"table\": \"Table\", \"tavern\": \"Tavern\", \"tea\": "
"\"Tea\", \"temple\": \"Temple\", \"theater\": \"Theater\", \"tiger\": \"Tiger\", \"torch\": \"Torch\", \"tower\": \"Tower\", \"town\": \"Town\", \"train\": \"Train\", \"treasure\": "
"\"Treasure\", \"tree\": \"Tree\", \"troll\": \"Troll\", \"tunnel\": \"Tunnel\", \"unicorn\": \"Unicorn\", \"valley\": \"Valley\", \"village\": \"Village\", \"volcano\": \"Volcano\", \"watch\": "
"\"Watch\", \"whale\": \"Whale\", \"white\": \"White\", \"wind\": \"Wind\", \"window\": \"Window\", \"wizard\": \"Wizard\", \"wolf\": \"Wolf\", \"yellow\": \"Yellow\", \"zebra\": \"Zebra\"}"

#: app./keyboards/inline_keyboard_factory.py:36
msgid "button.menu"
msgstr "📋 Menu"

#: app./keyboards/inline_keyboard_factory.py:40
msgid "button.back"
msgstr "◀️ Back"

#: app./keyboards/inline_keyboard_factory.py:47
msgid "button.right"
msgstr "»"

#: app./keyboards/inline_keyboard_factory.py:48
msgid "button.left"
msgstr "«"

#: app./keyboards/inline_keyboard_factory.py:78
msgid "button.start.play"
msgstr "🔍 Play SpotTheSpy"

#: app./keyboards/inline_keyboard_factory.py:84
msgid "button.start.language"
msgstr "🌐 Language"

#: app./keyboards/inline_keyboard_factory.py:97
msgid "button.choose_device.single_device"
msgstr "📲 Play from single device"

#: app./keyboards/inline_keyboard_factory.py:103
msgid "button.choose_device.multi_device"
msgstr "🌐 Play from multiple devices"

#: app./keyboards/inline_keyboard_factory.py:119
msgid "button.language.en"
msgstr "🇬🇧 English"

#: app./keyboards/inline_keyboard_factory.py:125
msgid "button.language.uk"
msgstr "🇺🇦 Ukrainian"

#: app./keyboards/inline_keyboard_factory.py:131
msgid "button.language.ru"
msgstr "🇷🇺 Russian"

#: app./keyboards/inline_keyboard_factory.py:146 app./keyboards/inline_keyboard_factory.py:257
msgid "button.got_it"
msgstr "👌 Got it"

#: app./keyboards/inline_keyboard_factory.py:166
msgid "button.single_device.configure.player_amount.selected"
msgstr "✅ {player_amount}"

#: app./keyboards/inline_keyboard_factory.py:170
msgid "button.single_device.configure.player_amount"
msgstr "{player_amount}"

#: app./keyboards/inline_keyboard_factory.py:183
msgid "button.single_device.play"
msgstr "🚀 Play"

#: app./keyboards/inline_keyboard_factory.py:197
msgid "button.single_device.view_role"
msgstr "🔍 View role"

#: app./keyboards/inline_keyboard_factory.py:213
msgid "button.single_device.proceed"
msgstr "👉 Proceed"

#: app./keyboards/inline_keyboard_factory.py:228
msgid "button.single_device.finish"
msgstr "🔍 View results"

#: app./keyboards/inline_keyboard_factory.py:242
msgid "button.single_device.play_again"
msgstr "🚀 Play again"

#: app./keyboards/inline_keyboard_factory.py:277
msgid "button.multi_device.configure.player_amount.selected"
msgstr "✅ {player_amount}"

#: app./keyboards/inline_keyboard_factory.py:281
msgid "button.multi_device.configure.player_amount"
msgstr "{player_amount}"

#: app./keyboards/inline_keyboard_factory.py:294
msgid "button.multi_device.play"
msgstr "🚀 Play"

#: app./keyboards/inline_keyboard_factory.py:313
msgid "button.multi_device.start"
msgstr "🚀 Start game"

#: app./keyboards/inline_keyboard_factory.py:327
msgid "button.multi_device.leave"
msgstr "❌ Leave game"

#: app./keyboards/inline_keyboard_factory.py:347
msgid "button.multi_device.finish"
msgstr "🔍 View results"

#: app./keyboards/inline_keyboard_factory.py:367
msgid "button.multi_device.play_again"
msgstr "🚀 Play again"

#: app./scenes/choose_device.py:21
msgid "message.choose_device"
msgstr ""
"📱 <b>Choose the game format</b>\n"
"\n"
"Pick how you want to play: either on a single device passed between players, or across multiple devices where everyone joins from their own phone."

#: app./scenes/language.py:23 app./scenes/language.py:52
msgid "message.language.choose"
msgstr ""
"🌐 <b>Choose your language</b>\n"
"\n"
"Select the language for all instructions, roles, and game messages. Everyone should understand it clearly to enjoy the game."

#: app./scenes/multi_device_configure.py:30
msgid "message.multi_device.configure"
msgstr ""
"⚙️ <b>Set player count</b>\n"
"\n"
"Use the buttons below to set how many players will join this game. Wait until everyone is present before starting to make sure no one is left out."

#: app./scenes/multi_device_configure.py:68 app./scenes/single_device_configure.py:30 app./scenes/single_device_configure.py:69
msgid "message.single_device.configure"
msgstr ""
"⚙️ <b>Set player count</b>\n"
"\n"
"Choose how many players will participate on this device. The phone will be passed around so each player can privately check their role before the game begins."

#: app./scenes/multi_device_explain.py:19
msgid "message.multi_device.explain"
msgstr ""
"📝 <b>How to play</b>\n"
"\n"
"One player is secretly chosen as the Spy, while the rest are Citizens who share a hidden word. Citizens ask and answer questions to spot the Spy, while the Spy must blend in and guess the word."

#: app./scenes/multi_device_play.py:290
msgid "message.multi_device.play.recruit.player.host"
msgstr "<player>{index}. {first_name} (Host)</player>"

#: app./scenes/multi_device_play.py:297
msgid "message.multi_device.play.recruit.player"
msgstr "<player>{index}. {first_name}</player>"

#: app./scenes/multi_device_play.py:304
msgid "message.multi_device.play.recruit"
msgstr ""
"🔍 <b>Recruiting players for SpotTheSpy</b>\n"
"\n"
"To join this game, <join>click here</join> or scan the QR code. Once enough players have joined, the host can start the game.\n"
"\n"
"<b>Players:</b>\n"
"{players}\n"
"\n"
"<b>{player_amount}/{max_player_amount}</b>"

#: app./scenes/multi_device_play.py:382
msgid "message.multi_device.play.recruit.game_not_found"
msgstr "❌ This game could not be found"

#: app./scenes/multi_device_play.py:385
msgid "message.multi_device.play.recruit.game_has_already_started"
msgstr "❌ This game has already started"

#: app./scenes/multi_device_play.py:388
msgid "message.multi_device.play.recruit.already_in_game"
msgstr "❌ You are already in game"

#: app./scenes/multi_device_play.py:391
msgid "message.multi_device.play.recruit.too_many_players"
msgstr "❌ This game already has the maximum number of players"

#: app./scenes/multi_device_play.py:423
msgid "answer.multi_device.play.too_few_players"
msgstr "⏳ Please wait for more players to join"

#: app./scenes/multi_device_play.py:441
msgid "message.multi_device.play.view_role.citizen"
msgstr ""
"👨 <b>You are a Citizen</b>\n"
"\n"
"Your mission is to identify the Spy without revealing the secret word. Ask clever questions and pay attention to answers to spot suspicious behavior.\n"
"\n"
"Secret word: <b>{secret_word}</b>"

#: app./scenes/multi_device_play.py:442
msgid "message.multi_device.play.view_role.spy"
msgstr ""
"🕵️‍♂️ <b>You are the Spy</b>\n"
"\n"
"Blend in with the Citizens and try to guess the secret word. Listen carefully to their answers and ask smart questions to collect clues without raising suspicion.\n"
"\n"
"Remember: never reveal you are the Spy."

#: app./scenes/multi_device_play.py:478
msgid "message.multi_device.play.finish"
msgstr ""
"🎭 <b>Game Over!</b>\n"
"\n"
"Player <player>{first_name}</player> was the Spy!\n"
"The secret word known to the Citizens was: <b>{secret_word}</b>.\n"
"\n"
"Thanks for playing — want to try another round?"

#: app./scenes/multi_device_play.py:596
msgid "message.multi_device.play.stop"
msgstr ""
"🎭 <b>Host left the game</b>\n"
"\n"
"The game has ended because the host is no longer present."

#: app./scenes/multi_device_play.py:609
msgid "message.multi_device.play.leave"
msgstr "❌ <b>You left the game</b>"

#: app./scenes/single_device_explain.py:19
msgid "message.single_device.explain"
msgstr ""
"📝 <b>How to play</b>\n"
"\n"
"Each player secretly receives a role: Citizen or Spy. Citizens know the secret word and must expose the Spy through clever questions. The Spy doesn’t know the word and must blend in while "
"trying to guess it.\n"
"\n"
"Remember: keep your role and the word hidden until the game ends."

#: app./scenes/single_device_play.py:46 app./scenes/single_device_play.py:114 app./scenes/single_device_play.py:175
msgid "message.single_device.play.prepare"
msgstr ""
"🤫 <b>Get ready to view your role</b>\n"
"\n"
"Each player must check their role privately. Only hold the phone when it’s your turn, and make sure no one else can see the screen.\n"
"\n"
"<b>Player {player_index}/{player_amount}</b>"

#: app./scenes/single_device_play.py:71
msgid "message.single_device.play.view_role.citizen"
msgstr ""
"👨 <b>You are a Citizen</b>\n"
"\n"
"Your goal is to uncover the Spy while protecting the secret word. Answer carefully, stay observant, and don’t give away too much information.\n"
"\n"
"Secret word: <b>{secret_word}</b>"

#: app./scenes/single_device_play.py:72
msgid "message.single_device.play.view_role.spy"
msgstr ""
"🕵️‍♂️ <b>You are the Spy</b>\n"
"\n"
"Your task is to guess the secret word without revealing who you are. Pay close attention to what others say, ask questions to gather clues, and stay unnoticed."

#: app./scenes/single_device_play.py:105
msgid "message.single_device.play.discuss"
msgstr ""
"👀 <b>Discussion time!</b>\n"
"\n"
"Now, everyone can talk and share suspicions. Citizens should look for slips that reveal the Spy, while the Spy must stay calm, answer carefully, and try to avoid suspicion.\n"
"\n"
"This is your chance to question, mislead, and decide who you trust."

#: app./scenes/single_device_play.py:137
msgid "message.single_device.play.finish"
msgstr ""
"🎭 <b>Game Over!</b>\n"
"\n"
"Player <b>{spy_index}</b> was the Spy!\n"
"The secret word known to the Citizens was: <b>{secret_word}</b>.\n"
"\n"
"Thanks for playing! Want to go another round?"

#: app./scenes/start.py:22 app./scenes/start.py:36
msgid "message.start"
msgstr ""
"🔍 <b>Welcome to SpotTheSpy!</b>\n"
"\n"
"Step into a thrilling game of secrets and suspicion, where one hidden Spy tries to guess the secret word while the Citizens work together to expose them. Every question, every answer, and "
"every pause could reveal the truth — or hide a lie.\n"
"\n"
"Will you trust your instincts or fall for deception? Gather your group, sharpen your wits, and prepare for a challenge of deduction, bluff, and quick thinking."
